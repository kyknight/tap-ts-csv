"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

/**
 * 
 * @param object 
 * @param callback
 * @return {object} 
 */
exports.tap = (object, callback) => {
    
    callback(object);

    return object;
}

/**
 * 
 * @param object 
 * @param callback
 * @return {Promise} 
 */
exports.tapAsync = (object, callback) => {
    
    return new Promise(callback.bind({}, object));
}
    
/**
 * 
 * @param object1 
 * @param callback
 * @return {object | Array} 
 */
exports.tapMerge = (object1, object2, callback) => {
    
    let merge;
    
    if(object1 === null || object2 === null){

        throw new Error("Must be a valid object");

    }else if (Array.isArray(object1) && Array.isArray(object2))

        merge = object1.concat(object2);

    else if(typeof object1 === "object" && typeof object2 === "object"){

        merge = Object.assign(object1, object2);
    }

    callback(merge);

    return merge;
}

/**
 * 
 * @param object1 
 * @param callback(merged: Object, resolve: (arg: any) => any, rejected: (err) => any) => any)
 * @return {object} 
 */
exports.tapMergeAsync = (object1, object2, callback) => {
    
    return new Promise(callback.bind({}, exports.tapMerge(object1, object2, merge => merge)));
}
    